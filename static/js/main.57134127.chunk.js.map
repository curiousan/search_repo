{"version":3,"sources":["Components/Modal.js","Components/RepoDetail.js","Components/RepoList.js","Components/Search.js","Components/App.js","serviceWorker.js","index.js"],"names":["Modal","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","show","react_default","a","createElement","className","children","onClick","onClose","React","Component","RepoDetail","_ref","repoDetail","closeModal","owner","name","language","followers","url","description","title","RepoList","repos","currentSearch","activePageNumber","handlePageChange","modalOpenStatus","openModal","selectedRepo","repoList","filter","each","searchKey","map","repo","repositories","startPage","endPage","totalPageCount","length","list","i","key","concat","style","float","Components_Modal","Components_RepoDetail","Pagination_default","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","Search","_this","handleChange","e","preventDefault","setState","searchText","target","value","error","searchRepo","state","onSubmit","type","placeholder","color","App","githubAjax","asyncToGenerator","regenerator_default","mark","_callee","searchKeyWord","existingRepoList","_args","arguments","wrap","_context","prev","next","undefined","searchKeywordList","indexOf","axios","get","then","response","keyword","data","abrupt","sent","stop","result","pageNumber","handleModalOpen","repoObj","modalOpen","_this2","Components_Search","Components_RepoList","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57134127.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div className=\"backdrop\">\n        <div className=\"modal\">\n          {this.props.children}\n          <br />\n          <div className=\"footer\">\n            <button className={\"btn btn-primary btn-lg\"} onClick={this.props.onClose}>\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Modal;","import React, {Component} from 'react';\n\nconst RepoDetail = ({repoDetail,closeModal}) => {\nconst {owner,name,language,followers,url,description} = repoDetail;\nconst title=owner+' / '+name;\n\n  return (\n    <div className={\"modal-body\"}>\n      <h1>{title} <span onClick={closeModal} className=\"glyphicon glyphicon-remove modal-close-icon\" /></h1>\n      <hr/>\n      <p><b>Language</b> : {language}</p>\n      <p><b>Follower</b> : {followers}</p>\n      <p><b>Url</b> : {url}</p>\n      <p><b>Description</b> : {description}</p>\n      <br/>\n      <hr />\n    </div>\n  )\n}\n\nexport default RepoDetail;","import React, {Component} from 'react';\nimport Pagination from 'react-js-pagination';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\n\nimport RepoDetail from './RepoDetail';\n\nconst RepoList = (props) => {\n  const {\n    repos,\n    currentSearch,\n    activePageNumber,\n    handlePageChange,\n    modalOpenStatus,\n    closeModal,\n    openModal,\n    selectedRepo\n  } = props;\n\n  /* find cached data id exists already */\n  const repoList = repos.filter(each => each.searchKey === currentSearch).map(repo => repo.repositories)[0] || [];\n  const totalItemPerPage = 5;\n\n  /* pagination data */\n  const startPage = totalItemPerPage * (activePageNumber - 1);\n  const endPage = startPage + (totalItemPerPage - 1);\n  const totalPageCount = repoList.length;\n\n  /* repos list */\n  const list = repoList.filter((each, i) => {\n    return i >= startPage && i <= endPage;\n  }).map((each, i) => {\n    return (\n      <div key={each.name + each.owner}>\n        <li onClick={() => openModal(each)}\n            className={`${i % 2 === 0\n              ? 'list-group-item-info list-group-item list'\n              : 'list-group-item-light list-group-item list'}`}>\n          {each.owner} / {each.name}\n        </li>\n      </div>\n    )\n  });\n\n  return (\n    <div className=\"repo-list well\">\n      <h2>\n        Result: {totalPageCount} &nbsp; &nbsp;\n        <span style={{float: 'right'}}>Keyword: {currentSearch}</span>\n      </h2>\n      <br/>\n      <ul className=\"list-group repo-list\">\n        {list}\n      </ul>\n      {/* detail view modal */}\n      <Modal show={modalOpenStatus}\n             onClose={closeModal}>\n        <RepoDetail closeModal={closeModal} repoDetail={selectedRepo}/>\n      </Modal>\n      {/* pagination */}\n      {totalPageCount > totalItemPerPage\n        ? <Pagination\n          activePage={activePageNumber}\n          itemsCountPerPage={totalItemPerPage}\n          totalItemsCount={totalPageCount}\n          pageRangeDisplayed={totalItemPerPage}\n          onChange={handlePageChange}\n        />\n        : null}\n    </div>\n  )\n}\n\nRepoList.propTypes = {\n  repos: PropTypes.array.isRequired,\n  currentSearch: PropTypes.string,\n  activePageNumber: PropTypes.number,\n  handlePageChange: PropTypes.func.isRequired,\n  modalOpenStatus: PropTypes.bool,\n  closeModal: PropTypes.func,\n  openModal: PropTypes.func,\n  selectedRepo: PropTypes.object\n}\n\nexport default RepoList;","import React, {Component} from 'react';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      error: ''\n    }\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      searchText: e.target.value,\n      error: ''\n    })\n  }\n\n  searchRepo = (e) => {\n    e.preventDefault();\n    /* validate input */\n    if (!this.state.searchText) {\n      this.setState({\n        error: 'The field is required!'\n      })\n    }else {\n      this.props.searchRepo(this.state.searchText);\n      this.setState({\n        searchText: ''\n      });\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <form className=\"form-horizontal justify-content-center\" onSubmit={this.searchRepo}>\n          <div className=\"input-group input-group-lg\">\n            <input name={\"search\"} value={this.state.searchText} onChange={this.handleChange} type=\"text\"\n                   className=\"form-control input-group-lg\" placeholder=\"Search repo\"/>\n            <button type=\"submit\" className=\"btn btn-primary btn-lg my-btn-lg\">Submit</button>\n\n\n          </div>\n          <span style={{color: 'red'}}>{this.state.error ? this.state.error : null}</span>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport RepoList from './RepoList';\nimport Search from './Search';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSearch: 'hello',\n      searchKeywordList: [],\n      repoList: [],\n      activePage: 1,\n      modalOpen: false,\n      selectedRepo: {}\n    }\n  }\n\n/* schema repo list */\n// repoList = {\n//   searchKey: 'hello',\n//   repositories: []\n// }\n\n\n  componentDidMount() {\n    this.githubAjax().then(result => {\n      this.setState({\n        currentSearch: 'hello',\n        searchKeywordList: this.state.searchKeywordList.concat(result.keyword),\n        repoList: this.state.repoList.concat({\n          searchKey: result.keyword,\n          repositories: result.data\n        })\n      });\n    });\n  }\n\n  githubAjax = async (searchKeyWord = 'hello') => {\n    /* check if search result already in store */\n    const searchResultExists = this.state.searchKeywordList.indexOf(searchKeyWord) !== -1;\n    if (!searchResultExists) {\n      return await axios.get(`https://api.github.com/legacy/repos/search/${searchKeyWord}`).then(response => {\n        return {\n          keyword: searchKeyWord,\n          data: response.data.repositories\n        }\n      });\n    } else {\n      const existingRepoList = this.state.repoList.filter(each => each.searchKey === searchKeyWord);\n      return {\n        keyword: searchKeyWord,\n        data: existingRepoList.repositories\n      }\n    }\n  }\n\n  searchRepo = (key) => {\n    /* get repo search */\n    this.githubAjax(key).then(result => {\n      this.setState({\n        currentSearch: key,\n        searchKeywordList: this.state.searchKeywordList.concat(result.keyword),\n        repoList: this.state.repoList.concat({\n          searchKey: result.keyword,\n          repositories: result.data\n        })\n      });\n    });\n  }\n\n  handlePageChange = (pageNumber) => {\n    this.setState({\n      activePage: pageNumber\n    });\n  }\n\n  handleModalOpen = (repoObj = {}) => {\n    this.setState({\n      openModal: true,\n      selectedRepo: repoObj\n    });\n  }\n  closeModal = () => {\n    this.setState({\n      openModal: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className={\"header\"}>\n          <h1>Search github repository</h1>\n        </header>\n        <Search searchRepo={this.searchRepo}/>\n        <br/>\n        <br/>\n        <RepoList currentSearch={this.state.currentSearch}\n                  repos={this.state.repoList}\n                  activePageNumber={this.state.activePage}\n                  handlePageChange={this.handlePageChange}\n                  openModal={this.handleModalOpen}\n                  closeModal={this.closeModal}\n                  modalOpenStatus={this.state.openModal}\n                  selectedRepo={this.state.selectedRepo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}